<?xml version="1.0" ?>

<robot name="rc_car">
  <material name="orange">
    <color rgba="1 .64  0  1"/>
  </material>
  <material name="black">
    <color rgba="1 1 1 1"/>
  </material>
  
  <!-- Inertial Macro -->
  <!-- Chassis Link Definition -->
  <link name="chassis">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0.09075"/>
      <geometry>
        <mesh filename="package://skid_steer_robot/URDF/assets/Chassis.dae"/>
      </geometry>
      <!--  <material name="orange"/>  Uncomment for Rviz -->
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.09075"/>
      <geometry>
        <mesh filename="package://skid_steer_robot/URDF/assets/Chassis.dae"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1"/>
      <inertia ixx="0.00414500685" ixy="0.0" ixz="0.0" iyy="0.01911488783" iyz="0.0" izz="0.02164626315"/>
      <origin rpy="0 0 0" xyz="0 0 0.088381"/>
    </inertial>
  </link>
  <gazebo reference="chassis">
    <material>Gazebo/Orange</material>
  </gazebo>
  

  <!-- Wheel Definition -->
  <!-- Calling Wheel Macro -->
  <link name="front_right_wheel">
    <visual>
      <geometry>
        <mesh filename="package://skid_steer_robot/URDF/assets/Wheel.dae"/>
      </geometry>
      <origin rpy="0 0 1.5707963267948966 " xyz="0 0 0"/>
      <!--  <material name="black"/> Uncomment for Rviz -->
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://skid_steer_robot/URDF/assets/Wheel.dae"/>
      </geometry>
      <origin rpy="0 0 1.5707963267948966" xyz="0 0 0"/>
    </collision>
    <inertial>
      <mass value="0.2"/>
      <inertia ixx="0.0002243658" ixy="0.0" ixz="0.0" iyy="0.00041873192200000004" iyz="0.0" izz="0.0002243658"/>
    </inertial>
  </link>
  <joint name="front_right_wheel_to_chassis" type="continuous">
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <parent link="chassis"/>
    <child link="front_right_wheel"/>
    <origin rpy="0 0 0" xyz="0.14 -0.115 0.06075"/>
  </joint>
  <gazebo reference="front_right_wheel">
    <material>Gazebo/Black</material>
  </gazebo>
  

  <link name="rear_right_wheel">
    <visual>
      <geometry>
        <mesh filename="package://skid_steer_robot/URDF/assets/Wheel.dae"/>
      </geometry>
      <origin rpy="0 0 1.5707963267948966 " xyz="0 0 0"/>
      <!--  <material name="black"/> Uncomment for Rviz -->
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://skid_steer_robot/URDF/assets/Wheel.dae"/>
      </geometry>
      <origin rpy="0 0 1.5707963267948966" xyz="0 0 0"/>
    </collision>
    <inertial>
      <mass value="0.2"/>
      <inertia ixx="0.0002243658" ixy="0.0" ixz="0.0" iyy="0.00041873192200000004" iyz="0.0" izz="0.0002243658"/>
    </inertial>
  </link>
  <joint name="rear_right_wheel_to_chassis" type="continuous">
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <parent link="chassis"/>
    <child link="rear_right_wheel"/>
    <origin rpy="0 0 0" xyz="-0.14 -0.115 0.06075"/>
  </joint>
  <gazebo reference="rear_right_wheel">
    <material>Gazebo/Black</material>
  </gazebo>
  

  <link name="front_left_wheel">
    <visual>
      <geometry>
        <mesh filename="package://skid_steer_robot/URDF/assets/Wheel.dae"/>
      </geometry>
      <origin rpy="0 0 1.5707963267948966 " xyz="0 0 0"/>
      <!--  <material name="black"/> Uncomment for Rviz -->
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://skid_steer_robot/URDF/assets/Wheel.dae"/>
      </geometry>
      <origin rpy="0 0 1.5707963267948966" xyz="0 0 0"/>
    </collision>
    <inertial>
      <mass value="0.2"/>
      <inertia ixx="0.0002243658" ixy="0.0" ixz="0.0" iyy="0.00041873192200000004" iyz="0.0" izz="0.0002243658"/>
    </inertial>
  </link>
  <joint name="front_left_wheel_to_chassis" type="continuous">
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <parent link="chassis"/>
    <child link="front_left_wheel"/>
    <origin rpy="0 0 0" xyz="0.14 0.115 0.06075"/>
  </joint>
  <gazebo reference="front_left_wheel">
    <material>Gazebo/Black</material>
  </gazebo>
  

  <link name="rear_left_wheel">
    <visual>
      <geometry>
        <mesh filename="package://skid_steer_robot/URDF/assets/Wheel.dae"/>
      </geometry>
      <origin rpy="0 0 1.5707963267948966 " xyz="0 0 0"/>
      <!--  <material name="black"/> Uncomment for Rviz -->
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://skid_steer_robot/URDF/assets/Wheel.dae"/>
      </geometry>
      <origin rpy="0 0 1.5707963267948966" xyz="0 0 0"/>
    </collision>
    <inertial>
      <mass value="0.2"/>
      <inertia ixx="0.0002243658" ixy="0.0" ixz="0.0" iyy="0.00041873192200000004" iyz="0.0" izz="0.0002243658"/>
    </inertial>
  </link>
  <joint name="rear_left_wheel_to_chassis" type="continuous">
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <parent link="chassis"/>
    <child link="rear_left_wheel"/>
    <origin rpy="0 0 0" xyz="-0.14 0.115 0.06075"/>
  </joint>
  <gazebo reference="rear_left_wheel">
    <material>Gazebo/Black</material>
  </gazebo>
  
<!-- Diff drive plugin -->
<gazebo>
    <plugin filename="gz-sim-diff-drive-system" name="gz::sim::systems::DiffDrive">
      <left_joint>front_left_wheel_to_chassis</left_joint>
      <left_joint>rear_left_wheel_to_chassis</left_joint>
      <right_joint>front_right_wheel_to_chassis</right_joint>
      <right_joint>rear_right_wheel_to_chassis</right_joint>

      <wheel_separation>0.2</wheel_separation>  
      <wheel_radius>0.06075</wheel_radius> 

      <max_linear_acceleration>10</max_linear_acceleration>

      <topic>cmd_vel</topic>         <!-- Topic over which commands are sent-->     
      <odom_topic>odom</odom_topic>  <!-- Topic over which odometry data sent -->
      <tf_topic>/tf</tf_topic>       <!-- Topic over which tf data sent -->

      <frame_id>odom</frame_id>      <!-- Frame_id field used as the origin of odometry transform -->
      <child_frame_id>chassis</child_frame_id>
      <odom_publisher_frequency>100</odom_publisher_frequency> <!-- Frequency od sending odometry data -->               
    </plugin>

  <!-- Robot state publisher -->
    <plugin filename="gz-sim-joint-state-publisher-system" name="gz::sim::systems::JointStatePublisher">
      <topic>joint_states</topic>
      <joint_name>front_left_wheel_to_chassis</joint_name>
      <joint_name>rear_left_wheel_to_chassis</joint_name>
      <joint_name>front_right_wheel_to_chassis</joint_name>
      <joint_name>rear_right_wheel_to_chassis</joint_name>
    </plugin>
</gazebo>

</robot>

